var o={},i;function u(){if(i)return o;i=1;var a=AFRAME.utils.debug,r=AFRAME.utils.coordinates,s=a("components:look-at:warn"),c=r.isCoordinates||r.isCoordinate;return delete AFRAME.components["look-at"],AFRAME.registerComponent("look-at",{schema:{default:"0 0 0",parse:function(e){return c(e)||typeof e=="object"?r.parse(e):e},stringify:function(e){return typeof e=="object"?r.stringify(e):e}},init:function(){this.target3D=null,this.vector=new THREE.Vector3,this.cameraListener=AFRAME.utils.bind(this.cameraListener,this),this.el.addEventListener("componentinitialized",this.cameraListener),this.el.addEventListener("componentremoved",this.cameraListener)},update:function(){var e=this,t=e.data,n;if(!t||typeof t=="object"&&!Object.keys(t).length)return e.remove();if(typeof t=="object")return this.lookAt(new THREE.Vector3(t.x,t.y,t.z));if(n=e.el.sceneEl.querySelector(t),!n){s('"'+t+'" does not point to a valid entity to look-at');return}return n.hasLoaded?e.beginTracking(n):n.addEventListener("loaded",function(){e.beginTracking(n)})},tick:function(){var e=new THREE.Vector3;return function(t){var n=this.target3D;n&&(n.getWorldPosition(e),this.lookAt(e))}}(),remove:function(){this.el.removeEventListener("componentinitialized",this.cameraListener),this.el.removeEventListener("componentremoved",this.cameraListener)},beginTracking:function(e){this.target3D=e.object3D},cameraListener:function(e){e.detail&&e.detail.name==="camera"&&this.update()},lookAt:function(e){var t=this.vector,n=this.el.object3D;this.el.getObject3D("camera")?t.subVectors(n.position,e).add(n.position):t.copy(e),n.lookAt(t)}}),o}export{u as r};
